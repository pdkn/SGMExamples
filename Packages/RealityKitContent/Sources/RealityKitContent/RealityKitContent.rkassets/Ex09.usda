#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.100.15)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Sphere", "MaterialEx09"]
    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/MaterialEx09> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.45
    }

    def Material "MaterialEx09"
    {
        token outputs:mtlx:surface.connect = </Root/MaterialEx09/UnlitSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (758.46094, -52.179688)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 47

        def Shader "UnlitSurface"
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap
            color3f inputs:color.connect = </Root/MaterialEx09/Mix.outputs:out>
            bool inputs:hasPremultipliedAlpha
            float inputs:opacity
            float inputs:opacityThreshold
            token outputs:out
            float2 ui:nodegraph:node:pos = (549.1953, -49.20703)
            float2 ui:nodegraph:node:size = (194.5, 181)
            int ui:nodegraph:node:stackingOrder = 133
        }

        def Shader "Texcoord"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-573.6697, -95.06069)
            float2 ui:nodegraph:node:size = (180.5, 53)
            int ui:nodegraph:node:stackingOrder = 272
        }

        def Shader "Separate2"
        {
            uniform token info:id = "ND_separate2_vector2"
            float2 inputs:in.connect = </Root/MaterialEx09/Multiply.outputs:out>
            float outputs:outx
            float outputs:outy
            float2 ui:nodegraph:node:pos = (-337.4249, -89.38712)
            float2 ui:nodegraph:node:size = (115, 127)
            int ui:nodegraph:node:stackingOrder = 272
        }

        def Shader "Combine3_1"
        {
            uniform token info:id = "ND_combine3_vector3"
            prepend float inputs:in1.connect = </Root/MaterialEx09/Separate2.outputs:outx>
            prepend float inputs:in2.connect = </Root/MaterialEx09/Separate2.outputs:outy>
            float inputs:in3.connect = </Root/MaterialEx09/Multiply_1.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-189.07318, -45.043297)
            float2 ui:nodegraph:node:size = (157, 54)
            int ui:nodegraph:node:stackingOrder = 272
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_vector2"
            float2 inputs:in1.connect = </Root/MaterialEx09/Texcoord.outputs:out>
            float2 inputs:in2 = (20, 20)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-441.89413, -85.75292)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 272
        }

        def Shader "Mix"
        {
            uniform token info:id = "ND_mix_color3"
            color3f inputs:bg.connect = </Root/MaterialEx09/Color_2.outputs:out>
            color3f inputs:fg.connect = </Root/MaterialEx09/Color_1.outputs:out>
            float inputs:mix.connect = </Root/MaterialEx09/Fractal3D.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (317.61337, -53.934288)
            float2 ui:nodegraph:node:size = (109, 145)
            int ui:nodegraph:node:stackingOrder = 272
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-541.4288, 20.852156)
            float2 ui:nodegraph:node:size = (122.5, 53)
            int ui:nodegraph:node:stackingOrder = 272
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/MaterialEx09/Time.outputs:out>
            float inputs:in2 = 0.6
            float outputs:out
            float2 ui:nodegraph:node:pos = (-440.30405, 30.697676)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 280
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "Color_1"
        {
            uniform token info:id = "ND_constant_color3"
            color3f inputs:value = (1, 0.4653648, 0.07304395) (
                colorSpace = "srgb_texture"
            )
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (104.24623, -252.33679)
            float2 ui:nodegraph:node:size = (151, 53)
            int ui:nodegraph:node:stackingOrder = 277
        }

        def Shader "Color_2"
        {
            uniform token info:id = "ND_constant_color3"
            color3f inputs:value = (0.84820867, 0.07589382, 0.1492828) (
                colorSpace = "srgb_texture"
            )
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (108.881485, -183.49747)
            float2 ui:nodegraph:node:size = (151, 53)
            int ui:nodegraph:node:stackingOrder = 278
        }

        def Shader "Fractal3D"
        {
            uniform token info:id = "ND_fractal3d_float"
            float inputs:amplitude
            float inputs:diminish
            float inputs:lacunarity
            int inputs:octaves
            float3 inputs:position.connect = </Root/MaterialEx09/Combine3_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (33.43575, -12.341937)
            float2 ui:nodegraph:node:size = (130.5, 181)
            int ui:nodegraph:node:stackingOrder = 288
        }
    }
}

