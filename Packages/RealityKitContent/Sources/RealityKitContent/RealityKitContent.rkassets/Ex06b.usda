#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.100.15)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Sphere", "MaterialEx06b"]
    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/MaterialEx06b> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.45
    }

    def Material "MaterialEx06b"
    {
        token outputs:mtlx:surface.connect = </Root/MaterialEx06b/UnlitSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (293.76633, 199.47968)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 574

        def Shader "UnlitSurface"
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap = 1
            color3f inputs:color.connect = </Root/MaterialEx06b/Mix.outputs:out>
            bool inputs:hasPremultipliedAlpha
            float inputs:opacity.connect = None
            float inputs:opacityThreshold
            token outputs:out
            float2 ui:nodegraph:node:pos = (43.032238, 208.53345)
            float2 ui:nodegraph:node:size = (194.5, 181)
            int ui:nodegraph:node:stackingOrder = 574
        }

        def Shader "Normal"
        {
            uniform token info:id = "ND_normal_vector3"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-905.84955, 173.50949)
            float2 ui:nodegraph:node:size = (128.5, 40)
            int ui:nodegraph:node:stackingOrder = 574
        }

        def Shader "DotProduct"
        {
            uniform token info:id = "ND_dotproduct_vector3"
            float3 inputs:in1.connect = </Root/MaterialEx06b/ViewDirection.outputs:out>
            float3 inputs:in2.connect = </Root/MaterialEx06b/Normal.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-718.1693, 130.29608)
            float2 ui:nodegraph:node:size = (153.5, 53)
            int ui:nodegraph:node:stackingOrder = 574
        }

        def Shader "ViewDirection"
        {
            uniform token info:id = "ND_realitykit_viewdirection_vector3"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-948.5562, 89.2113)
            float2 ui:nodegraph:node:size = (210, 53)
            int ui:nodegraph:node:stackingOrder = 574
        }

        def Shader "Oneminus"
        {
            uniform token info:id = "ND_realitykit_oneminus_float"
            float inputs:in.connect = </Root/MaterialEx06b/DotProduct.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-524.17914, 117.69922)
            float2 ui:nodegraph:node:size = (158, 109)
            int ui:nodegraph:node:stackingOrder = 574
        }

        def Shader "Power"
        {
            uniform token info:id = "ND_power_float"
            float inputs:in1.connect = </Root/MaterialEx06b/Oneminus.outputs:out>
            float inputs:in2 = 3
            float outputs:out
            float2 ui:nodegraph:node:pos = (-337.77948, 161.64749)
            float2 ui:nodegraph:node:size = (123.5, 40)
            int ui:nodegraph:node:stackingOrder = 574
        }

        def Shader "Mix"
        {
            uniform token info:id = "ND_mix_color3"
            color3f inputs:bg.connect = </Root/MaterialEx06b/Inner_Color.outputs:out>
            color3f inputs:fg.connect = </Root/MaterialEx06b/Surface_Color.outputs:out>
            prepend float inputs:mix.connect = </Root/MaterialEx06b/Power.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-152.19917, 131.80101)
            float2 ui:nodegraph:node:size = (109, 145)
            int ui:nodegraph:node:stackingOrder = 574
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:fg"]
        }

        def Shader "Surface_Color"
        {
            uniform token info:id = "ND_constant_color3"
            color3f inputs:value = (0.48164302, 0.7327178, 0.5920363) (
                colorSpace = "srgb_texture"
            )
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-534.7942, -72.76912)
            float2 ui:nodegraph:node:size = (175, 53)
            int ui:nodegraph:node:stackingOrder = 574
        }

        def Shader "Inner_Color"
        {
            uniform token info:id = "ND_constant_color3"
            color3f inputs:value = (0.26202652, 0.19240639, 0.2786261) (
                colorSpace = "srgb_texture"
            )
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-530.7152, 2.6759517)
            float2 ui:nodegraph:node:size = (158, 53)
            int ui:nodegraph:node:stackingOrder = 575
        }
    }
}

