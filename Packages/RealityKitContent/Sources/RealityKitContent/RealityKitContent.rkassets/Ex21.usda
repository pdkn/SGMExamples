#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.100.15)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["MaterialEx21", "plane_0", "plane_1", "plane_2", "plane_3", "plane_4"]
    def Material "MaterialEx21"
    {
        token outputs:mtlx:surface.connect = </Root/MaterialEx21/UnlitSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (677.01544, -150.93547)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 259

        def Shader "Position"
        {
            uniform token info:id = "ND_position_vector3"
            string inputs:space = "world"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-459.79688, -106.89844)
            float2 ui:nodegraph:node:size = (133.5, 40)
            int ui:nodegraph:node:stackingOrder = 94
        }

        def Shader "Fractal3D"
        {
            uniform token info:id = "ND_fractal3d_color3"
            float inputs:diminish
            float inputs:lacunarity = 3
            int inputs:octaves = 5
            float3 inputs:position.connect = </Root/MaterialEx21/Position.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-253.71, -67.83891)
            float2 ui:nodegraph:node:size = (130.5, 181)
            int ui:nodegraph:node:stackingOrder = 184
        }

        def Shader "Separate3_1"
        {
            uniform token info:id = "ND_separate3_color3"
            color3f inputs:in.connect = </Root/MaterialEx21/Luminance.outputs:out>
            float outputs:outb
            float outputs:outg
            float outputs:outr
            float2 ui:nodegraph:node:pos = (107.029144, 93.32383)
            float2 ui:nodegraph:node:size = (127.5, 145)
            int ui:nodegraph:node:stackingOrder = 230
        }

        def Shader "Luminance"
        {
            uniform token info:id = "ND_luminance_color3"
            color3f inputs:in.connect = </Root/MaterialEx21/Fractal3D.outputs:out>
            color3f inputs:lumacoeffs
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-72.7482, 113.49961)
            float2 ui:nodegraph:node:size = (138.5, 127)
            int ui:nodegraph:node:stackingOrder = 230
        }

        def Shader "Power"
        {
            uniform token info:id = "ND_power_float"
            float inputs:in1.connect = </Root/MaterialEx21/Separate3_1.outputs:outr>
            float inputs:in2 = 0.7
            float outputs:out
            float2 ui:nodegraph:node:pos = (258.60336, 86.28086)
            float2 ui:nodegraph:node:size = (123.5, 40)
            int ui:nodegraph:node:stackingOrder = 230
        }

        def Shader "Remap"
        {
            uniform token info:id = "ND_remap_color3"
            color3f inputs:in.connect = </Root/MaterialEx21/Fractal3D.outputs:out>
            color3f inputs:inhigh
            color3f inputs:inlow
            color3f inputs:outhigh = (1, 0.049369864, 0.5487979) (
                colorSpace = "srgb_texture"
            )
            color3f inputs:outlow
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (166.04068, -174.97894)
            float2 ui:nodegraph:node:size = (94, 181)
            int ui:nodegraph:node:stackingOrder = 286
        }

        def Shader "UnlitSurface"
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap = 1
            color3f inputs:color.connect = </Root/MaterialEx21/Remap.outputs:out>
            bool inputs:hasPremultipliedAlpha = 0
            float inputs:opacity.connect = </Root/MaterialEx21/Power.outputs:out>
            float inputs:opacityThreshold
            token outputs:out
            float2 ui:nodegraph:node:pos = (463.53894, -117.94865)
            float2 ui:nodegraph:node:size = (194.5, 181)
            int ui:nodegraph:node:stackingOrder = 285
        }
    }

    def "plane_1" (
        active = true
        references = @AdditionalPrimitives/plane.usdz@
    )
    {
        float3 xformOp:scale = (0.9, 0.9, 0.9)
        float3 xformOp:translate = (0, 0, 0.2)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Geom"
        {
            over "Plane" (
                prepend apiSchemas = ["MaterialBindingAPI"]
                customData = {
                    float3 rotationEulerHint = (1.5707964, 0, 0)
                }
            )
            {
                rel material:binding = </Root/MaterialEx21> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                quatf xformOp:orient = (0.70710677, 0.70710677, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }

        over "Materials"
        {
            over "defaultMaterial"
            {
                token outputs:surface.connect = </Root/plane_1/Materials/defaultMaterial/Shader.outputs:surface>
            }
        }
    }

    def "plane_2" (
        active = true
        references = @AdditionalPrimitives/plane.usdz@
    )
    {
        float3 xformOp:scale = (0.9, 0.9, 0.9)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Geom"
        {
            over "Plane" (
                prepend apiSchemas = ["MaterialBindingAPI"]
                customData = {
                    float3 rotationEulerHint = (1.5707964, 0, 0)
                }
            )
            {
                rel material:binding = </Root/MaterialEx21> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                quatf xformOp:orient = (0.70710677, 0.70710677, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }

        over "Materials"
        {
            over "defaultMaterial"
            {
                token outputs:surface.connect = </Root/plane_2/Materials/defaultMaterial/Shader.outputs:surface>
            }
        }
    }

    def "plane_3" (
        active = true
        references = @AdditionalPrimitives/plane.usdz@
    )
    {
        float3 xformOp:scale = (0.9, 0.9, 0.9)
        float3 xformOp:translate = (0, 0, -0.2)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Geom"
        {
            over "Plane" (
                prepend apiSchemas = ["MaterialBindingAPI"]
                customData = {
                    float3 rotationEulerHint = (1.5707964, 0, 0)
                }
            )
            {
                rel material:binding = </Root/MaterialEx21> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                quatf xformOp:orient = (0.70710677, 0.70710677, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }

        over "Materials"
        {
            over "defaultMaterial"
            {
                token outputs:surface.connect = </Root/plane_3/Materials/defaultMaterial/Shader.outputs:surface>
            }
        }
    }

    def "plane_4" (
        active = true
        references = @AdditionalPrimitives/plane.usdz@
    )
    {
        float3 xformOp:scale = (0.9, 0.9, 0.9)
        float3 xformOp:translate = (0, 0, -0.4)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Geom"
        {
            over "Plane" (
                prepend apiSchemas = ["MaterialBindingAPI"]
                customData = {
                    float3 rotationEulerHint = (1.5707964, 0, 0)
                }
            )
            {
                rel material:binding = </Root/MaterialEx21> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                quatf xformOp:orient = (0.70710677, 0.70710677, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }

        over "Materials"
        {
            over "defaultMaterial"
            {
                token outputs:surface.connect = </Root/plane_4/Materials/defaultMaterial/Shader.outputs:surface>
            }
        }
    }

    def "plane_0" (
        active = true
        references = @AdditionalPrimitives/plane.usdz@
    )
    {
        float3 xformOp:scale = (0.9, 0.9, 0.9)
        float3 xformOp:translate = (0, 0, 0.4)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Geom"
        {
            over "Plane" (
                prepend apiSchemas = ["MaterialBindingAPI"]
                customData = {
                    float3 rotationEulerHint = (1.5707964, 0, 0)
                }
            )
            {
                rel material:binding = </Root/MaterialEx21> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                quatf xformOp:orient = (0.70710677, 0.70710677, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }
    }
}

