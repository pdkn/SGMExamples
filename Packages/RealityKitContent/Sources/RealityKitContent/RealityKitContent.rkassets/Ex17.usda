#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.100.15)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Material> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.45
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Material "Material"
    {
        prepend token outputs:mtlx:surface.connect = </Root/Material/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (828.98413, -4.8417945)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 515

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/Material/Image.outputs:out>
            float inputs:metallic
            float inputs:opacity
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (603.98413, -4.8417945)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 515
        }

        def Shader "Noise3D"
        {
            uniform token info:id = "ND_noise3d_float"
            float inputs:amplitude = 5
            float inputs:pivot = 1
            float3 inputs:position.connect = </Root/Material/Multiply.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-116.45277, -30.006721)
            float2 ui:nodegraph:node:size = (105, 145)
            int ui:nodegraph:node:stackingOrder = 241
        }

        def Shader "Position"
        {
            uniform token info:id = "ND_position_vector3"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-392.34027, -68.0692)
            float2 ui:nodegraph:node:size = (133.5, 40)
            int ui:nodegraph:node:stackingOrder = 52
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_vector3"
            float3 inputs:in1.connect = </Root/Material/Position.outputs:out>
            float3 inputs:in2 = (100, 100, 100)
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-252.24017, -61.841805)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 239
        }

        def Shader "Texcoord"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (55.366085, 178.29034)
            float2 ui:nodegraph:node:size = (180.5, 53)
            int ui:nodegraph:node:stackingOrder = 433
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Material/Noise3D.outputs:out>
            float inputs:in2 = 0.002
            float inputs:in2.connect = </Root/Material/Multiply_2.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-8.291935, 52.848087)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 442
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_vector2"
            float2 inputs:in1.connect = </Root/Material/Combine2.outputs:out>
            float2 inputs:in2.connect = </Root/Material/Texcoord.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (220.20653, 120.66089)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 376
        }

        def Shader "Combine2"
        {
            uniform token info:id = "ND_combine2_vector2"
            float inputs:in1.connect = </Root/Material/Multiply_1.outputs:out>
            float inputs:in2.connect = </Root/Material/Multiply_1.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (113.846, 47.058075)
            float2 ui:nodegraph:node:size = (144.5, 53)
            int ui:nodegraph:node:stackingOrder = 444
        }

        def Shader "Image"
        {
            uniform token info:id = "ND_image_color3"
            color3f inputs:default
            asset inputs:file = @TextureImages/artist_workshop_1k.heic@
            string inputs:filtertype
            float2 inputs:texcoord.connect = </Root/Material/Add.outputs:out>
            string inputs:uaddressmode
            string inputs:vaddressmode
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (356.5452, 118.22872)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 515
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-584.7696, 48.838863)
            float2 ui:nodegraph:node:size = (122.5, 53)
            int ui:nodegraph:node:stackingOrder = 440
        }

        def Shader "Sin"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Material/Multiply_3.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-363.08896, 74.259796)
            float2 ui:nodegraph:node:size = (116, 40)
            int ui:nodegraph:node:stackingOrder = 431
        }

        def Shader "Add_1"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Material/Sin.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (-249.23456, 75.46042)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 431
        }

        def Shader "Multiply_2"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Material/Add_1.outputs:out>
            float inputs:in2 = 0.001
            float outputs:out
            float2 ui:nodegraph:node:pos = (-154.13852, 78.434845)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 431
        }

        def Shader "Multiply_3"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Material/Time.outputs:out>
            float inputs:in2 = 2
            float outputs:out
            float2 ui:nodegraph:node:pos = (-472.4624, 72.16193)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 438
        }
    }
}

